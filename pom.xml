<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.levonk</groupId>
	<artifactId>maven-codequalities-parent</artifactId>
	<name>Internal Root POM</name>
    <description>multi-module pom to distribute parent poms</description>
	<packaging>pom</packaging>
	<version>2.0.84-SNAPSHOT</version>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>

	<organization>
		<name>Levon K</name>
		<url>none</url>
	</organization>
	
	<developers>
		<developer>
			<id>levonk</id>
			<name>Levon K</name>
			<email>none</email>
			<url>none</url>
		</developer>
		
		
		<developer>
			<id>jwang</id>
			<name>Jing Wang</name>
			<email>none</email>
			<url>none</url>
		</developer>
	</developers>
	
	<scm>
		<connection>scm:git:ssh://git@github.com/DGHLJ/pub-maven-archetypes.git</connection>
		<developerConnection>scm:git:ssh://git@github.com/DGHLJ/pub-maven-archetypes.git</developerConnection>
		<tag>HEAD</tag>
		<url>https://github.com/DGHLJ/pub-maven-archetypes</url>
	</scm>
	
	<distributionManagement>
		<snapshotRepository>
			<id>oss.sonatype.org</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>oss.sonatype.org</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>
		</repository>
	</distributionManagement>
	
	<modules>
		<module>licenses</module>
		<module>codequality</module>
		<module>parent-poms</module>
		<module>test-project</module>
	</modules>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<coreext-maven-plugin.version>0.23-rc1</coreext-maven-plugin.version>	<!-- 2016-12-28 -->
		<jgitflow-maven-plugin.version>1.0-m5.1</jgitflow-maven-plugin.version>	<!-- 2016-12-28 -->
		<maven-profiledep-extension.version>0.23-rc1</maven-profiledep-extension.version>	<!-- 2016-12-28 -->
		<nexus-staging-maven-plugin>1.6.7</nexus-staging-maven-plugin>	<!-- 2016-12-28 -->
		<maven-project-info-reports-plugin.version>2.9</maven-project-info-reports-plugin.version>	<!-- 2017-03-12 -->
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>external.atlassian.jgitflow</groupId>
				<artifactId>jgitflow-maven-plugin</artifactId>
				<version>${jgitflow-maven-plugin.version}</version>
				<configuration>
					<msgPrefix>[jgitflow-maven-plugin]</msgPrefix>
					<enableFeatureVersions>true</enableFeatureVersions>
					<enableSshAgent>true</enableSshAgent>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<pushFeatures>true</pushFeatures>
					<pushReleases>true</pushReleases>
					<pushHotfixes>true</pushHotfixes>
					<pushSupport>true</pushSupport>
					<noDeploy>true</noDeploy>
					<noReleaseBuild>true</noReleaseBuild>
					<skipTests>false</skipTests>
					<keepBranch>false</keepBranch>
					<flowInitContext>
						<masterBranchName>master </masterBranchName>
						<developBranchName>develop</developBranchName>
						<featureBranchPrefix>feature/</featureBranchPrefix>
						<releaseBranchPrefix>release/</releaseBranchPrefix>
						<hotfixBranchPrefix>hotfix/</hotfixBranchPrefix>
						<versionTagPrefix>v</versionTagPrefix>
					</flowInitContext>
				</configuration>
			</plugin>
			<plugin>
				<!-- @see https://github.com/sviperll/ozymandias/tree/master/coreext-maven-plugin -->
				<groupId>com.github.sviperll</groupId>
				<artifactId>coreext-maven-plugin</artifactId>
				<version>${coreext-maven-plugin.version}</version>
				<configuration>
					<!-- Required core extensions: -->
					<extensions combine.children="append">
						<extension>
							<groupId>com.github.sviperll</groupId>
							<artifactId>maven-profiledep-extension</artifactId>
							<version>${maven-profiledep-extension.version}</version>
						</extension>
					</extensions>
				</configuration>
				<executions>
					<execution>
						<id>check-coreext</id>
						<goals>
							<!--
								If we dont' meet the requirements of our enviornment then
								stop everything and complain.   Within Jenkins we should have
								a pipeline step that will make the enviornment what we expect to be.
								Something like:
									* mvn clean
									* mvn coreext:install
									* mvn compile
									* mvn test
									* mvn integration-test
									* mvn pitest:run
									* mvn package
							-->
							<goal>check</goal>
						</goals>
						<!-- default phase is: -->
						<!--	<phase>validate</phase>	-->
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<!-- AVOID: [WARNING] Report plugin org.apache.maven.plugins:maven-project-info-reports-plugin has an empty version. -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${maven-project-info-reports-plugin.version}</version>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>maven-central-release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>${nexus-staging-maven-plugin}</version>
						<extensions>true</extensions>
						<configuration>
							<!-- The Base URL of Nexus instance where we want to stage -->
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<!-- The server "id" element from settings to use authentication from -->
							<serverId>oss.sonatype.org</serverId>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

    <!-- vim: set noexpandtab tabstop=4 shiftwidth=4: -->
</project>
