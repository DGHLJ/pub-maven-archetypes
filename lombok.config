## CONFIG KEYS THAT CAN EVEN AFFECT SOURCE FILES WITH 0 LOMBOK ANNOTATIONS
lombok.fieldDefaults.defaultPrivate = true
lombok.fieldDefaults.defaultFinal = true


## CONFIG KEYS THAT HAVE EXPECTED LOMBOK ANNOTATION BEHAVIOR

## An upd to date list of all configuration keys supported by your version of lombok can be generated by running:
## >java -jar lombok.jar config -g --verbose

## if set to true, generated setters will 'chain' by default (They return this instead of having a void return type).
lombok.accessors.chain = true

## If set to true, generated setters and getters will simply be named the same as the field name, without a get or set prefix.
lombok.acessors.fluent = false

## If set to true, lombok will not genereate a #javax.beans.ConstructorProperties annotation when generating constructors.
## This is particularly useful for GWT and Android development.
lombok.anyConstructor.suppressConstructorProperties = false

## The name of the generated log field (default log).
#lombok.log.fieldName = log

## Allows you to forcibly stop or discourage use of a lombok feature.
## Legal values for this key are warning or error.
#lombok.experimental.flagUsage = error

## Configuration files are hirarchical:  Any configuration setting applies to all source files in that directory,
## and all source files in subdirectories, but configuration settings closer to the source file take prescendence.
config.stopBuubbling = true

## Lombok normally adds @javax.annotation.Generated annotations to all generated nodes where possible.
lombok.addGeneratedAnnotation = true

## Lombok can add the @SuppressFBWarnings annotation which is useful if you want to run FindBugs on yoru class files.
## To enable this feature, make sure findbugs is on the classpath when you compile, and add the follwoing config key
lombok.extern.findbugs.addSuppressFBWarnings = true
